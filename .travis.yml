sudo: false

language: cpp

os:
  - linux

compiler:
  - clang

addons:
  apt:
    sources:
      - deadsnakes
      - ubuntu-toolchain-r-test
    packages:
      - python2.7
      - python2.7-dev
      # install gcc-4.8 for C++11 compatibility, #TODO remove when Travis has gcc>=4.8, (it's used for clang too, in coveralls)
      - g++-4.8
      - cmake
      - cmake-data

notifications:
  email:
    recipients:
      - "nupic-hackers@lists.numenta.org"
    on_success: change
    on_failure: change
  webhooks: "https://webhooks.gitter.im/e/68f77bae61efa5c931f8"

env:
  global:
  - NUPIC=$TRAVIS_BUILD_DIR/nupic
  - NAB=$TRAVIS_BUILD_DIR/NAB
  - PYTHONPATH=/home/travis/build/numenta/nupic/lib/python2.7/site-packages:$NUPIC
  - AWS_ACCESS_KEY_ID=AKIAIGHYSEHV3WFKOWNQ
  - secure: BqIdU+D/Vtt5tydjKc1jxc9tHHu8rK9WIv4VysJD++vRSLERYhaSI3Gy1pjB5rrc/VfdLAqWmC7YdmTwEudyVtl0niUF5Zdtztq777qWK2PCxQBUAAXBqaYKNmHDXaBO0I63oTrfevM6OD7UspHqbBzfJhU9RF9GYSy7mz9cvYM=

before_install:
  - cd ${TRAVIS_BUILD_DIR}

  - NUPIC_SHA=`cat nupic_sha.txt`
  - echo "Fetching NuPIC source code at SHA ${NUPIC_SHA}"
  - git clone https://github.com/numenta/nupic.git --depth 50
  - (cd nupic && git reset --hard ${NUPIC_SHA})

  - echo "INSTALLING NUPIC.CORE / NUPIC.BINDINGS"

  # Fetch nupic.core build
  - pushd ${NUPIC}
  - export NUPIC_CORE_COMMITISH=`python -c "execfile('.nupic_modules'); print NUPIC_CORE_COMMITISH"`
  - popd
  - "echo Installing NuPIC at SHA ${NUPIC_CORE_COMMITISH}"
  - "echo Downloading nupic.core build: https://s3-us-west-2.amazonaws.com/artifacts.numenta.org/numenta/nupic.core/nupic_core-${NUPIC_CORE_COMMITISH}-linux64.tar.gz"
  - curl -O "https://s3-us-west-2.amazonaws.com/artifacts.numenta.org/numenta/nupic.core/nupic_core-${NUPIC_CORE_COMMITISH}-linux64.tar.gz"
  - tar xzf "nupic_core-${NUPIC_CORE_COMMITISH}-linux64.tar.gz"
  - "echo Wheels fetched from nupic.bindings nupic_core-${NUPIC_CORE_COMMITISH}-linux64.tar.gz"
  - ls home/travis/build/numenta/nupic.core/bindings/py/dist/wheels

  # Install nupic.bindings and dependencies from wheels
  - pip install --user --no-index --find-links=home/travis/build/numenta/nupic.core/bindings/py/dist/wheels nupic.bindings

  # Clone NAB
  - git clone https://github.com/numenta/NAB.git --depth 50

  - NUPIC_VERSION=`cat ${NUPIC}/VERSION`



install:
  # Required for fetch_wheels.py
  - pip install requests boto --user
  # Fetches the binary distribution.
  - python fetch_wheels.py

  - NUPIC_VERSION=`cat ${NUPIC}/VERSION`
  - echo "Installing NuPIC ${NUPIC_VERSION} from wheelhouse..."
  - pip install --use-wheel --find-links=wheelhouse nupic==${NUPIC_VERSION}

  - echo "Installing NAB..."
  - (cd ${NAB} && python setup.py install --user)

  # Required for one of the regression tests
  - pip install automatatron --user


script:

  - ls /home/travis/.local/lib/python2.7/site-packages
  - ls /home/travis/.local/lib/python2.7/site-packages/pytest-xdist
  - ls /home/travis/.local/lib/python2.7/site-packages/pytest-xdist/bin

  # NuPIC swarming tests
  - cd $NUPIC
  - python ./scripts/run_nupic_tests.py -w

  # NuPIC example runs
  - . ./ci/travis/script-run-examples.sh

  # Remove checked in results file then run NAB
  - cd $NAB
  - rm results/final_results.json
  - python run.py -d numenta --detect --score --normalize --skipConfirmation

  - cd $TRAVIS_BUILD_DIR

  # Regressions tests
  - py.test tests/
